{"version":3,"file":"index-BMPfdrg_.js","sources":["../../src/app/components/utilsComponents/BaseComponent.ts","../../src/app/components/utilsComponents/Button.ts","../../src/app/utils/icons.ts","../../src/app/utils/types.ts","../../src/app/components/EventEmitter.ts","../../src/app/utils/constants.ts","../../src/app/components/State.ts","../../src/app/components/api.ts","../../src/app/utils/helpers.ts","../../src/app/utils/predicates.ts","../../src/app/components/CarView/CarView.ts","../../src/app/components/utilsComponents/InteractionForm.ts","../../src/app/components/CreateCarForm/CreateCarForm.ts","../../src/app/components/UpdateCarForm/UpdateCarForm.ts","../../src/app/utils/carsData.ts","../../src/app/utils/getRandomCars.ts","../../src/app/components/GarageView/GarageView.ts","../../src/app/components/WinnersView/WinnersView.ts","../../src/app/components/App/App.ts","../../src/index.ts"],"sourcesContent":["import { Props, Handler } from '../../utils/types';\n\nexport default class BaseComponent<T extends HTMLElement = HTMLElement> {\n  public element: T;\n  public children: BaseComponent[] = [];\n\n  protected handlers: Handler[] = [];\n\n  constructor(props: Props) {\n    this.element = document.createElement(props.tag || 'div') as T;\n    this.addClasses(props.classNames);\n    if (props.text !== null) {\n      this.setTextContent(props.text);\n    }\n    this.children = [];\n  }\n  public getElement() {\n    return this.element;\n  }\n\n  public getChildren() {\n    return this.children;\n  }\n\n  public addClasses(cssClasses: string[] = []): void {\n    cssClasses.map((cssClass) => this.element.classList.add(cssClass));\n  }\n\n  public setTextContent(text: string = ''): void {\n    this.element.textContent = text;\n  }\n\n  public addClass(className: string): void {\n    this.element.classList.add(className);\n  }\n\n  public toggleClass(className: string): void {\n    this.element.classList.toggle(className);\n  }\n\n  public removeClass(className: string): void {\n    this.element.classList.remove(className);\n  }\n\n  public append(...compChildren: BaseComponent[]): void {\n    compChildren.forEach((child) => {\n      if (child instanceof BaseComponent) {\n        this.element.append(child.element);\n        this.children.push(child);\n      }\n    });\n  }\n\n  public insertBefore(newComp: BaseComponent, child: BaseComponent, index: number) {\n    this.element.insertBefore(newComp.element, child.element);\n    this.children[index] = newComp;\n  }\n\n  public attr(name: string, value?: string) {\n    if (value) {\n      this.element.setAttribute(name, value);\n      return this;\n    }\n    return this.element.getAttribute(name);\n  }\n\n  public removeAttr(name: string) {\n    this.element.removeAttribute(name);\n  }\n\n  public css(prop: string, value: string) {\n    this.element.style.setProperty(prop, value);\n  }\n\n  public findAll(selector: string) {\n    return [...this.element.querySelectorAll(selector)];\n  }\n\n  public closest(selector: string) {\n    return this.element.closest(selector);\n  }\n\n  public on(eventType: string, callback: (event: Event) => void) {\n    this.element.addEventListener(eventType, callback);\n    this.handlers.push({ eventType, callback });\n  }\n\n  public off(eventType: string, callback: (event: Event) => void) {\n    this.element.removeEventListener(eventType, callback);\n  }\n\n  public html(html: string) {\n    this.element.innerHTML = html;\n  }\n\n  public destroyChildren(): void {\n    if (this.children.length > 0) {\n      this.children.forEach((child) => {\n        child.destroy();\n      });\n      this.children.length = 0;\n    }\n  }\n\n  public destroy(): void {\n    this.destroyChildren();\n    this.element.remove();\n    this.deleteHandlers();\n  }\n\n  public deleteHandlers(): void {\n    this.handlers.forEach((handler: Handler) => {\n      this.off(handler.eventType, handler.callback);\n    });\n  }\n}\n","import BaseComponent from './BaseComponent';\nimport { ButtonProps } from '../../utils/types';\n\nexport default class Button extends BaseComponent<HTMLButtonElement> {\n  constructor(props: ButtonProps) {\n    super({ tag: 'button', ...props });\n    if (props.type) {\n      this.attr('type', props.type);\n    }\n    if (props.callback) {\n      this.on('click', props.callback);\n    }\n    if (props.disabled) {\n      this.disable();\n    }\n  }\n\n  public disable = (): void => {\n    this.element.disabled = true;\n  };\n\n  public enable = (): void => {\n    this.element.disabled = false;\n  };\n}\n","const carIcon = (\n  color: string\n) => `<svg fill=\"transparent\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n  <path d=\"M8 17H16M8 17C8 18.1046 7.10457 19 6 19C4.89543 19 4 18.1046 4 17M8 17C8 15.8954 7.10457 15 6 15C4.89543 15 4 15.8954 4 17M16 17C16 18.1046 16.8954 19 18 19C19.1046 19 20 18.1046 20 17M16 17C16 15.8954 16.8954 15 18 15C19.1046 15 20 15.8954 20 17M10 5V11M4 11L4.33152 9.01088C4.56901 7.58593 4.68776 6.87345 5.0433 6.3388C5.35671 5.8675 5.79705 5.49447 6.31346 5.26281C6.8993 5 7.6216 5 9.06621 5H12.4311C13.3703 5 13.8399 5 14.2662 5.12945C14.6436 5.24406 14.9946 5.43194 15.2993 5.68236C15.6435 5.96523 15.904 6.35597 16.425 7.13744L19 11M4 17H3.6C3.03995 17 2.75992 17 2.54601 16.891C2.35785 16.7951 2.20487 16.6422 2.10899 16.454C2 16.2401 2 15.9601 2 15.4V14.2C2 13.0799 2 12.5198 2.21799 12.092C2.40973 11.7157 2.71569 11.4097 3.09202 11.218C3.51984 11 4.0799 11 5.2 11H17.2C17.9432 11 18.3148 11 18.6257 11.0492C20.3373 11.3203 21.6797 12.6627 21.9508 14.3743C22 14.6852 22 15.0568 22 15.8C22 15.9858 22 16.0787 21.9877 16.1564C21.9199 16.5843 21.5843 16.9199 21.1564 16.9877C21.0787 17 20.9858 17 20.8 17H20\" stroke=${color} stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n  </svg>`;\n\nexport default carIcon;\n","export type Props = {\n  tag?: keyof HTMLElementTagNameMap;\n  classNames?: string[];\n  text?: string;\n  callback?: () => void;\n};\n\nexport type Handler = {\n  eventType: string;\n  callback: (event: Event) => void;\n};\n\nexport type ButtonProps = Omit<Props, 'tag'> & {\n  type?: string;\n  disabled?: boolean;\n};\n\nexport type CarData = NewCarData & {\n  id: number;\n  status?: 'stop' | 'drive' | 'broken';\n  duration: number;\n  wins: number;\n};\n\nexport type NewCarData = {\n  name: string;\n  color: string;\n};\n\nexport type RandomCar = { [key: string]: string[] };\n\nexport type WinnerData = {\n  wins: number;\n  time: number;\n};\n\nexport type NewWinnerData = WinnerData & {\n  id: number;\n};\n\nexport type Params = {\n  key: string;\n  value: string;\n};\n\nexport type WinnerWithCar = NewWinnerData & NewCarData;\n\nexport enum SortState {\n  none = '',\n  wins = 'wins',\n  time = 'time',\n}\n\nexport enum OrderState {\n  none = '',\n  up = 'ASC',\n  down = 'DESC',\n}\n\nexport type FormState = {\n  formName: string;\n  disabled: boolean;\n  nameInput: string;\n  colorInput: string;\n  currentId: number;\n};\n\nexport type InputData = NewCarData & {\n  id: number;\n};\n","type Listener = (...args: unknown[]) => void;\n\nclass EventEmitter {\n  private listeners: { [event: string]: Listener[] } = {};\n\n  public on(event: string, listener: Listener): void {\n    if (!this.listeners[event]) {\n      this.listeners[event] = [];\n    }\n    this.listeners[event].push(listener);\n  }\n\n  public off(event: string, listener: Listener): void {\n    if (this.listeners[event]) {\n      this.listeners[event] = this.listeners[event].filter((l) => l !== listener);\n    }\n  }\n\n  public emit(event: string, ...args: unknown[]): void {\n    const eventListeners = this.listeners[event];\n    if (eventListeners) {\n      eventListeners.forEach((listener) => {\n        listener(...args);\n      });\n    }\n  }\n}\nconst emitter = new EventEmitter();\n\nexport default emitter;\n","const limitCarsOnPage = 7;\nconst limitWinners = 10;\nconst winnersOnPage = 5;\nconst randomCarsCount = 100;\nconst defaultColor = '#000000';\n\nexport { limitCarsOnPage, winnersOnPage, randomCarsCount, limitWinners, defaultColor };\n","import {\n  CarData,\n  NewWinnerData,\n  WinnerData,\n  SortState,\n  OrderState,\n  FormState,\n} from '../utils/types';\nimport emitter from './EventEmitter';\nimport { limitCarsOnPage, limitWinners } from '../utils/constants';\n\ntype EngineData = {\n  velocity: number;\n  distance: number;\n};\n\nclass State {\n  public race: boolean = false;\n  public winner: number = 0;\n  public allCarsCount: number = 0;\n  public allWinnersCount: number = 0;\n  public currPage: number = 1;\n  public winnersPage: number = 1;\n  public prevBtn: boolean = false;\n  public nextBtn: boolean = true;\n  public prevWinners: boolean = false;\n  public nextWinners: boolean = false;\n  protected promisesCount: number = 0;\n  public sort: string = SortState.none;\n  public order: string = OrderState.none;\n  public formsState: FormState[] = [];\n  public carsMap = new Map<number, CarData>();\n\n  public resetRace() {\n    this.race = false;\n    this.winner = 0;\n    this.promisesCount = 0;\n  }\n\n  public setRaceState(raceState: boolean) {\n    this.race = raceState;\n  }\n\n  public setWinner(id: number): void {\n    this.winner = id;\n    if (id === 0) {\n      return;\n    }\n    const carData = this.carsMap.get(id);\n    emitter.emit('showWinner', carData);\n  }\n\n  public setWinnerData(data: NewWinnerData): void {\n    const carData = this.carsMap.get(data.id);\n    if (!carData) {\n      throw new Error('carData is undefined');\n    }\n    const timeInSec = data.time * 1000;\n    carData.wins = data.wins + 1;\n    carData.duration = timeInSec < carData.duration ? timeInSec : carData.duration;\n  }\n\n  public getWinnerData(id: number): WinnerData {\n    const carData = this.carsMap.get(id);\n    if (!carData) {\n      throw new Error('carData is undefined');\n    }\n    const timeInSec = +(carData.duration / 1000).toFixed(2);\n    return { wins: carData.wins, time: timeInSec };\n  }\n\n  public getCarData(id: number) {\n    return this.carsMap.get(id);\n  }\n\n  public getSortValue(): string {\n    return this.sort;\n  }\n\n  public getOrderValue(): string {\n    return this.order;\n  }\n\n  public getFisrtWinnerData(id: number): NewWinnerData {\n    const carData = this.carsMap.get(id);\n    if (!carData) {\n      throw new Error('carData is undefined');\n    }\n    const timeInSec = +(carData.duration / 1000).toFixed(2);\n    return { id: carData.id, wins: 1, time: timeInSec };\n  }\n\n  public addCarToState = (car: CarData) => {\n    const newCar: CarData = {\n      ...car,\n      status: 'stop',\n      wins: 0,\n    };\n    this.carsMap.set(car.id, newCar);\n    emitter.emit('addNewCar', newCar);\n  };\n\n  public updateCarInState = (car: CarData) => {\n    this.carsMap.set(car.id, car);\n    emitter.emit('updateCar', car);\n  };\n\n  public addCarsToState(cars: CarData[]) {\n    emitter.emit('destroyGarageView');\n    this.carsMap.clear();\n    cars.forEach((car) => {\n      this.addCarToState(car);\n    });\n  }\n\n  public updateGarageData(cars: CarData[], count: number, numb: number) {\n    this.addCarsToState(cars);\n    this.updateAllCarsCount(count);\n    this.updatePageNumber(numb);\n  }\n\n  public updateAllCarsCount(newCount: number) {\n    this.allCarsCount = newCount;\n    emitter.emit('updateCount', newCount);\n  }\n\n  public getCurrentPage(): number {\n    return this.currPage;\n  }\n\n  public updatePageNumber(newPage: number) {\n    this.currPage = newPage;\n    if (this.currPage === 1) {\n      this.prevBtn = false;\n    } else {\n      this.prevBtn = true;\n    }\n    if (Math.ceil(this.allCarsCount / limitCarsOnPage) === this.currPage) {\n      this.nextBtn = false;\n    } else {\n      this.nextBtn = true;\n    }\n    emitter.emit('updatePage', newPage, this.prevBtn, this.nextBtn);\n  }\n\n  public setCarStatusDrive(id: number, engineData: EngineData) {\n    const duration = engineData.distance / engineData.velocity;\n    const carData = this.carsMap.get(id);\n    if (!carData) {\n      throw new Error('carData is undefined');\n    }\n    carData.status = 'drive';\n    carData.duration = duration;\n    emitter.emit('startMoving', duration, id);\n  }\n\n  public setCarStatusBroken(id: number) {\n    const carData = this.carsMap.get(id);\n    if (!carData) {\n      throw new Error('carData is undefined');\n    }\n    carData.status = 'broken';\n    emitter.emit('stopMoving', id);\n  }\n\n  public setCarStatusStop(id: number) {\n    const carData = this.carsMap.get(id);\n    if (!carData) {\n      throw new Error('carData is undefined');\n    }\n    carData.status = 'stop';\n    emitter.emit('toStart', id);\n  }\n\n  public getCarStatus(id: number) {\n    const carData = this.carsMap.get(id);\n    if (!carData) {\n      throw new Error('cardData is undefined');\n    }\n    const { status } = carData;\n    return status;\n  }\n\n  public updatePromisesCount() {\n    state.promisesCount += 1;\n    if (state.promisesCount === this.carsMap.size) {\n      emitter.emit('finishRace');\n      state.promisesCount = 0;\n    }\n  }\n\n  public setWinners(winners: NewWinnerData[], cars: CarData[]) {\n    const winnersData = winners.map((winner, i) => {\n      const obj = {\n        id: winner.id,\n        wins: winner.wins,\n        time: winner.time,\n        color: cars[i].color,\n        name: cars[i].name,\n      };\n      return obj;\n    });\n    emitter.emit('updateWinnersView', winnersData, this.winnersPage);\n  }\n\n  public setWinnersCount(count: number) {\n    this.allWinnersCount = count;\n    emitter.emit('updateWinnersCount', count);\n  }\n\n  public setWinnersPage(page: number) {\n    this.winnersPage = page;\n    if (this.winnersPage === 1) {\n      this.prevWinners = false;\n    } else {\n      this.prevWinners = true;\n    }\n    if (Math.ceil(this.allWinnersCount / limitWinners) === this.winnersPage) {\n      this.nextWinners = false;\n    } else {\n      this.nextWinners = true;\n    }\n\n    emitter.emit('updateWinnersPage', page, this.prevWinners, this.nextWinners);\n  }\n\n  public setOrderAndSortState(sort: string, order: string) {\n    this.sort = sort;\n    this.order = order;\n  }\n\n  public saveGarageState(formsState: FormState[]) {\n    this.formsState = formsState;\n  }\n\n  public getGarageFormsState() {\n    return this.formsState;\n  }\n}\n\nconst state = new State();\n\nexport default state;\n","import { CarData, NewCarData, Params, NewWinnerData } from '../utils/types';\nimport state from './State';\nimport { limitCarsOnPage } from '../utils/constants';\n\nconst baseURL = 'http://127.0.0.1:3000';\n\nconst path = {\n  garage: '/garage',\n  winners: '/winners',\n  engine: '/engine',\n};\n\nfunction getQueryString(params: Params[] = []) {\n  const str =\n    params.length > 0 ? `?${params.map((el: Params) => `${el.key}=${el.value}`).join('&')}` : '';\n  return str;\n}\n\nexport async function getCars(page: number) {\n  try {\n    const response = await fetch(\n      `${baseURL}${path.garage}?_page=${page}&_limit=${limitCarsOnPage}}`\n    );\n    const data: CarData[] = await response.json();\n\n    if (data.length === 0 && state.currPage > 1) {\n      state.currPage -= 1;\n      getCars(state.currPage);\n    } else {\n      const carsCount = Number(response.headers.get('X-Total-Count'));\n      state.updateGarageData(data, carsCount, page);\n    }\n  } catch (error) {\n    if (error instanceof Error) {\n      console.error('Error:', error.message);\n    }\n  }\n}\n\nexport async function createCar(newCarData: NewCarData) {\n  try {\n    await fetch(`${baseURL}${path.garage}`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(newCarData),\n    });\n\n    getCars(state.currPage);\n  } catch (error) {\n    if (error instanceof Error) {\n      console.error('Error:', error.message);\n    }\n  }\n}\n\nexport async function updateCar(id: number, newCarData: NewCarData) {\n  try {\n    const response = await fetch(`${baseURL}${path.garage}/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(newCarData),\n    });\n    const data = await response.json();\n    state.updateCarInState(data);\n  } catch (error) {\n    if (error instanceof Error) {\n      console.error('Error:', error.message);\n    }\n  }\n}\n\nexport async function deleteWinner(id: number) {\n  fetch(`${baseURL}${path.winners}/${id}`, {\n    method: 'DELETE',\n  }).catch((error) => {\n    if (error instanceof Error) {\n      console.error('Error:', error.message);\n    }\n  });\n}\n\nexport function deleteCar(id: number) {\n  fetch(`${baseURL}${path.garage}/${id}`, {\n    method: 'DELETE',\n  })\n    .then(() => {\n      getCars(state.currPage);\n    })\n    .then(() => {\n      deleteWinner(id);\n    })\n    .catch((error) => {\n      if (error instanceof Error) {\n        console.error('Error:', error.message);\n      }\n    });\n}\n\nexport function createWinner(id: number) {\n  fetch(`${baseURL}${path.winners}`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify(state.getFisrtWinnerData(id)),\n  })\n    .then((response) => {\n      if (response.status === 500) {\n        getWinner(id);\n      }\n    })\n    .catch((error) => {\n      if (error instanceof Error) {\n        console.error('Error:', error.message);\n      }\n    });\n}\n\nexport function driveCar(id: number, status: string, controller: AbortController) {\n  fetch(`${baseURL}${path.engine}?id=${id}&status=${status}`, {\n    method: 'PATCH',\n    signal: controller.signal,\n  })\n    .then((response) => {\n      state.updatePromisesCount();\n      if (response.status === 500) {\n        state.setCarStatusBroken(id);\n      }\n      if (response.status === 200) {\n        if (!state.winner && state.race) {\n          state.setRaceState(false);\n          state.setWinner(id);\n          createWinner(id);\n        }\n      }\n    })\n    .catch((error) => {\n      if (error instanceof Error) {\n        console.log(error.message);\n      }\n    });\n}\n\nexport async function startCar(id: number, status: string, controller: AbortController) {\n  try {\n    const response = await fetch(`${baseURL}${path.engine}?id=${id}&status=${status}`, {\n      method: 'PATCH',\n    });\n\n    const data = await response.json();\n    driveCar(id, 'drive', controller);\n    state.setCarStatusDrive(id, data);\n  } catch (error) {\n    if (error instanceof Error) {\n      console.error('Error:', error.message);\n    }\n  }\n}\n\nexport async function stopCar(id: number, controller: AbortController) {\n  try {\n    await fetch(`${baseURL}${path.engine}?id=${id}&status=stopped`, {\n      method: 'PATCH',\n    });\n    controller.abort();\n    state.setCarStatusStop(id);\n  } catch (error) {\n    if (error instanceof Error) {\n      console.error('Error:', error.message);\n    }\n  }\n}\n\nexport async function addRandomCars(newCars: NewCarData[]) {\n  try {\n    const promises = newCars.map((carData: NewCarData) =>\n      fetch(`${baseURL}${path.garage}`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(carData),\n      })\n    );\n    await Promise.all(promises);\n\n    getCars(state.currPage);\n  } catch (error) {\n    if (error instanceof Error) {\n      console.error('Error:', error.message);\n    }\n  }\n}\n\nexport function getWinners(params: Params[], page: number) {\n  fetch(`${baseURL}${path.winners}${getQueryString(params)}`, {\n    method: 'GET',\n  })\n    .then((response) => {\n      const winnersCount = Number(response.headers.get('X-Total-Count'));\n      state.setWinnersCount(winnersCount);\n      state.setWinnersPage(page);\n      return response.json();\n    })\n    .then((dataWinners: NewWinnerData[]) => {\n      const promises = dataWinners.map((car) =>\n        fetch(`${baseURL}${path.garage}/${car.id}`, {\n          method: 'GET',\n        }).then((response) => response.json())\n      );\n\n      Promise.all(promises).then((dataCars: CarData[]) => {\n        state.setWinners(dataWinners, dataCars);\n      });\n    })\n    .catch((error) => {\n      if (error instanceof Error) {\n        console.error('Error:', error.message);\n      }\n    });\n}\n\nexport function updateWinner(id: number) {\n  fetch(`${baseURL}${path.winners}/${id}`, {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify(state.getWinnerData(id)),\n  }).catch((error) => {\n    if (error instanceof Error) {\n      console.error('Error:', error.message);\n    }\n  });\n}\n\nexport function getWinner(id: number) {\n  fetch(`${baseURL}${path.winners}/${id}`, {\n    method: 'GET',\n  })\n    .then((response) => response.json())\n    .then((data) => {\n      state.setWinnerData(data);\n    })\n    .then(() => {\n      updateWinner(id);\n    })\n    .catch((error) => {\n      if (error instanceof Error) {\n        console.error('Error:', error.message);\n      }\n    });\n}\n","export default function getDistance(car: HTMLElement) {\n  const carRect = car.getBoundingClientRect();\n  const carWidth = carRect.width;\n  const windowWidth = window.innerWidth;\n  const rightCoordinate = windowWidth - carWidth - 40;\n  const leftCoorDinate = carRect.left;\n  const distance = rightCoordinate - leftCoorDinate;\n  return distance;\n}\n","import { CarData } from './types';\n\nexport default function isCarData(car: unknown): car is CarData {\n  return typeof car === 'object' && car !== null && 'id' in car;\n}\n","import styles from './carview.module.scss';\nimport BaseComponent from '../utilsComponents/BaseComponent';\nimport { CarData } from '../../utils/types';\nimport Button from '../utilsComponents/Button';\nimport carIcon from '../../utils/icons';\nimport { deleteCar, startCar, stopCar } from '../api';\nimport getDistance from '../../utils/helpers';\nimport emitter from '../EventEmitter';\nimport state from '../State';\nimport isCarData from '../../utils/predicates';\n\nexport default class CarView extends BaseComponent {\n  public fetchController = new AbortController();\n  protected animationId?: number;\n  public selectBtn = new Button({ classNames: [styles.selectBtn], text: 'Select' });\n  public removeBtn = new Button({ classNames: [styles.removeBtn], text: 'Remove' });\n  public startBtn = new Button({ classNames: [styles.startBtn], text: 'А' });\n  public stopBtn = new Button({ classNames: [styles.stopBtn], text: 'В', disabled: true });\n  public carImg = new BaseComponent({ tag: 'div', classNames: [styles.carImg] });\n\n  public carName = new BaseComponent({ tag: 'div', classNames: [styles.carName] });\n\n  public id: number = 0;\n\n  constructor(data: CarData) {\n    super({ tag: 'div', classNames: [styles.carBlock] });\n    this.id = data.id;\n    this.element.id = data.id.toString();\n    this.createView(data);\n    this.removeBtn.on('click', this.clickOnRemoveBtn);\n    this.startBtn.on('click', this.clickOnStartBtn);\n    this.stopBtn.on('click', this.clickOnStopBtn);\n    this.selectBtn.on('click', this.clickOnSelectBtn);\n    emitter.on('startMoving', this.startMoving);\n    emitter.on('stopMoving', this.stopMoving);\n    emitter.on('updateCar', this.updateCarView);\n    emitter.on('toStart', this.moveCarToStart);\n  }\n  protected createView(data: CarData) {\n    this.carName.setTextContent(data.name);\n    const buttons = new BaseComponent({ tag: 'div', classNames: [styles.buttonsBox] });\n    const controls = new BaseComponent({ tag: 'div', classNames: [styles.controlsBox] });\n    const flag = new BaseComponent({ tag: 'div', classNames: [styles.flagIcon] });\n    this.carImg.html(carIcon(data.color));\n    buttons.append(this.selectBtn, this.removeBtn);\n    controls.append(this.startBtn, this.stopBtn);\n    this.append(this.carName, buttons, controls, this.carImg, flag);\n  }\n\n  protected clickOnRemoveBtn = () => {\n    deleteCar(this.id);\n  };\n\n  public clickOnStartBtn = () => {\n    this.fetchController = new AbortController();\n    startCar(this.id, 'started', this.fetchController);\n    this.startBtn.disable();\n  };\n\n  public clickOnStopBtn = () => {\n    const status = state.getCarStatus(this.id);\n    if (status === 'drive' || status === 'broken') {\n      stopCar(this.id, this.fetchController);\n      this.carImg.removeClass(styles.carBroken);\n    }\n\n    this.stopBtn.disable();\n  };\n\n  protected moveCarToStart = (id: unknown) => {\n    if (typeof id !== 'number') {\n      throw new Error('id is not number');\n    }\n    if (this.id !== id) {\n      return;\n    }\n    this.stopMoving(this.id);\n    this.carImg.css('transform', `translateX(0px)`);\n    this.startBtn.enable();\n  };\n\n  protected clickOnSelectBtn = () => {\n    emitter.emit('enableUpdateForm', this.id);\n  };\n\n  protected updateCarView = (car: unknown) => {\n    if (!isCarData(car)) {\n      throw new Error('argument is not type CarData');\n    }\n    if (this.element.id !== String(car.id)) {\n      return;\n    }\n\n    this.carName.setTextContent(car.name);\n    this.carImg.html(carIcon(car.color));\n  };\n\n  public startMoving = (duration: unknown, id: unknown) => {\n    if (typeof id !== 'number') {\n      throw new Error('id is not number');\n    }\n\n    if (this.id !== id) {\n      return;\n    }\n    if (typeof duration !== 'number') {\n      throw new Error('duration is not number');\n    }\n    this.stopBtn.enable();\n    const distance = getDistance(this.carImg.element);\n    const speed = distance / duration;\n    const startX = 0;\n    let startTime: number = 0;\n    const step = (timestamp: number) => {\n      if (!startTime) startTime = timestamp;\n      const progress = timestamp - startTime;\n      const newX = startX + speed * progress;\n      this.carImg.css('transform', `translateX(${newX}px)`);\n\n      if (progress < duration) {\n        this.animationId = requestAnimationFrame(step);\n      }\n    };\n\n    requestAnimationFrame(step);\n  };\n\n  public stopMoving = (id: unknown) => {\n    if (typeof id !== 'number') {\n      throw new Error('id is not number');\n    }\n\n    if (this.id !== id) {\n      return;\n    }\n\n    if (!this.animationId) {\n      throw new Error('animationid is undefined');\n    }\n    const status = state.getCarStatus(this.id);\n    if (status === 'broken') {\n      this.carImg.addClass(styles.carBroken);\n    }\n\n    cancelAnimationFrame(this.animationId);\n  };\n}\n","import styles from './form.module.scss';\nimport { defaultColor } from '../../utils/constants';\nimport BaseComponent from './BaseComponent';\nimport Button from './Button';\nimport { FormState, InputData } from '../../utils/types';\n\nexport default class InteractionForm extends BaseComponent<HTMLFormElement> {\n  public inputName = new BaseComponent<HTMLInputElement>({\n    tag: 'input',\n    classNames: [styles.inputName],\n  });\n  public inputColor = new BaseComponent<HTMLInputElement>({\n    tag: 'input',\n    classNames: [styles.inputColor],\n  });\n\n  public submitBtn = new Button({ classNames: [styles.submitBtn] });\n\n  public disabled: boolean = false;\n\n  public currentId = 0;\n\n  constructor(public formName: string) {\n    super({ tag: 'form', classNames: [styles.formBox] });\n    this.configureView();\n  }\n\n  protected configureView() {\n    this.inputName.attr('type', 'text');\n    this.inputColor.attr('type', 'color');\n    this.append(this.inputName, this.inputColor, this.submitBtn);\n    this.children.forEach((component) => {\n      component.attr('required', 'true');\n    });\n  }\n\n  public disable = () => {\n    this.disabled = true;\n    this.children.forEach((component) => {\n      component.attr('disabled', 'true');\n    });\n  };\n\n  public enable = () => {\n    this.disabled = false;\n    this.children.forEach((component) => {\n      component.removeAttr('disabled');\n    });\n  };\n\n  protected resetForm() {\n    this.inputName.element.value = '';\n    this.inputColor.element.value = defaultColor;\n  }\n\n  public getInputValue(input: BaseComponent<HTMLInputElement>) {\n    return input.getElement().value;\n  }\n\n  public getInputsValues(): InputData {\n    const name = this.inputName.element.value;\n    const color = this.inputColor.element.value;\n    const id = this.currentId;\n    return { name, color, id };\n  }\n\n  public updateView(formState: FormState): void {\n    if (formState.disabled) {\n      this.disable();\n    } else {\n      this.enable();\n      this.currentId = formState.currentId;\n      this.inputName.element.value = formState.nameInput;\n      this.inputColor.element.value = formState.colorInput;\n    }\n  }\n}\n","import InteractionForm from '../utilsComponents/InteractionForm';\nimport { createCar } from '../api';\nimport { NewCarData } from '../../utils/types';\n\nexport default class CreateCarForm extends InteractionForm {\n  constructor(formName: string) {\n    super(formName);\n    this.addClass('create-form');\n    this.submitBtn.setTextContent('Create');\n\n    this.on('submit', this.onSubmitHandler);\n  }\n\n  protected onSubmitHandler = (e: Event) => {\n    e.preventDefault();\n    const newCarData: NewCarData = {\n      name: this.getInputValue(this.inputName),\n      color: this.getInputValue(this.inputColor),\n    };\n    createCar(newCarData);\n\n    this.resetForm();\n  };\n}\n","import InteractionForm from '../utilsComponents/InteractionForm';\nimport emitter from '../EventEmitter';\nimport { NewCarData } from '../../utils/types';\nimport { updateCar } from '../api';\nimport state from '../State';\n\nexport default class CreateCarForm extends InteractionForm {\n  constructor(formName: string) {\n    super(formName);\n    this.addClass('update-form');\n    this.disable();\n    this.submitBtn.setTextContent('Update');\n    emitter.on('enableUpdateForm', this.enableForm);\n    this.on('submit', this.onSubmitHandler);\n  }\n\n  protected enableForm = (id: unknown) => {\n    if (typeof id !== 'number') {\n      throw new Error('id is not string');\n    }\n    this.enable();\n    this.inputName.element.focus();\n    this.currentId = id;\n    const carData = state.getCarData(id);\n    if (!carData) {\n      throw new Error('carData is undefined');\n    }\n    const { name, color } = carData;\n    this.inputName.element.value = name;\n    this.inputColor.element.value = color;\n  };\n\n  protected onSubmitHandler = (e: Event) => {\n    e.preventDefault();\n    const carData: NewCarData = {\n      name: this.getInputValue(this.inputName),\n      color: this.getInputValue(this.inputColor),\n    };\n    updateCar(this.currentId, carData);\n\n    this.resetForm();\n    this.disable();\n    this.currentId = 0;\n  };\n}\n","import { RandomCar } from './types';\n\nconst cars: RandomCar[] = [\n  {\n    Toyota: [\n      'Corolla',\n      'Camry',\n      'Rav4',\n      'Prius',\n      'Highlander',\n      'Tacoma',\n      'Tundra',\n      'Sienna',\n      'Yaris',\n      '4Runner',\n    ],\n  },\n  {\n    Honda: [\n      'Civic',\n      'Accord',\n      'CR-V',\n      'Pilot',\n      'Odyssey',\n      'Fit',\n      'Ridgeline',\n      'HR-V',\n      'Insight',\n      'Passport',\n    ],\n  },\n  {\n    ' Ford': [\n      'F-150',\n      'Escape',\n      'Explorer',\n      'Focus',\n      'Edge',\n      'Mustang',\n      'Ranger',\n      'Fusion',\n      'Expedition',\n      'EcoSport',\n    ],\n  },\n  {\n    Chevrolet: [\n      'Silverado',\n      'Equinox',\n      'Malibu',\n      'Traverse',\n      'Tahoe',\n      'Camaro',\n      'Colorado',\n      'Blazer',\n      'Suburban',\n      'Corvette',\n    ],\n  },\n  {\n    ' Volkswagen': [\n      'Jetta',\n      'Passat',\n      'Tiguan',\n      'Atlas',\n      'Golf',\n      'Arteon',\n      'ID.4',\n      'Taos',\n      'Atlas Cross Sport',\n      'Touareg',\n    ],\n  },\n  {\n    'Mercedes-Benz': [\n      'C-Class',\n      'E-Class',\n      'S-Class',\n      'GLC',\n      'GLE',\n      'GLA',\n      'G-Class',\n      'A-Class',\n      'CLA',\n      'GLB',\n    ],\n  },\n  {\n    ' BMW': [\n      '3 Series',\n      '5 Series',\n      'X3',\n      'X5',\n      'X1',\n      '7 Series',\n      'X7',\n      '2 Series',\n      '4 Series',\n      '8 Series',\n    ],\n  },\n  { ' Audi': ['A4', 'Q5', 'A3', 'Q7', 'Q3', 'A6', 'A5', 'Q8', 'A7', 'e-tron'] },\n  {\n    Hyundai: [\n      'Elantra',\n      'Sonata',\n      'Tucson',\n      'Santa Fe',\n      'Kona',\n      'Palisade',\n      'Venue',\n      'Accent',\n      'Veloster',\n      'Ioniq',\n    ],\n  },\n  {\n    Kia: [\n      'Sorento',\n      'Sportage',\n      'Telluride',\n      'Soul',\n      'Forte',\n      'Optima',\n      'Stinger',\n      'Rio',\n      'Cadenza',\n      'K5',\n    ],\n  },\n];\n\nexport default cars;\n","import cars from './carsData';\nimport { RandomCar, NewCarData } from './types';\nimport { randomCarsCount } from './constants';\n\nfunction getRandomModel(randomCars: RandomCar[]): string {\n  const randomBrandIndex = Math.floor(Math.random() * randomCars.length);\n  const randomBrandObj = randomCars[randomBrandIndex];\n  const brand = Object.keys(randomBrandObj)[0];\n  const models = randomBrandObj[brand];\n  const randomModelIndex = Math.floor(Math.random() * models.length);\n  const model = models[randomModelIndex];\n  return `${brand} ${model}`;\n}\n\nfunction getRandomColor(): string {\n  const letters = '0123456789ABCDEF';\n  let color = '#';\n  for (let i = 0; i < 6; i += 1) {\n    color += letters[Math.floor(Math.random() * 16)];\n  }\n  return color;\n}\n\nexport default function getRandomCars(): NewCarData[] {\n  const carsArr = [];\n  for (let i = 0; i < randomCarsCount; i += 1) {\n    const randomCar = {\n      name: getRandomModel(cars),\n      color: getRandomColor(),\n    };\n    carsArr.push(randomCar);\n  }\n\n  return carsArr;\n}\n","import styles from './garageview.module.scss';\nimport BaseComponent from '../utilsComponents/BaseComponent';\nimport CarView from '../CarView/CarView';\nimport CreateCarForm from '../CreateCarForm/CreateCarForm';\nimport UpdateCarForm from '../UpdateCarForm/UpdateCarForm';\nimport emitter from '../EventEmitter';\nimport isCarData from '../../utils/predicates';\nimport Button from '../utilsComponents/Button';\nimport getRandomCars from '../../utils/getRandomCars';\nimport { addRandomCars, getCars } from '../api';\nimport { NewCarData, FormState } from '../../utils/types';\nimport state from '../State';\n\nenum Forms {\n  CreateForm = 'createForm',\n  UpdateForm = 'updateForm',\n}\n\nexport default class GarageView extends BaseComponent {\n  protected createForm = new CreateCarForm(Forms.CreateForm);\n  protected updateForm = new UpdateCarForm(Forms.UpdateForm);\n\n  protected forms = [this.createForm, this.updateForm];\n\n  public raceBtn = new Button({ classNames: [styles.raceBtn], text: 'Race' });\n  public resetBtn = new Button({ classNames: [styles.resetBtn], text: 'Reset', disabled: true });\n  public generateBtn = new Button({ classNames: [styles.generateBtn], text: 'Generate Cars' });\n\n  public garageTitle = new BaseComponent({ tag: 'p', classNames: [styles.garageTitle] });\n\n  public pageTitle = new BaseComponent({ tag: 'p', classNames: [styles.pageTitle] });\n\n  public firstTitle = new BaseComponent({ tag: 'p', classNames: [styles.firstTitle] });\n  protected garageList = new BaseComponent({ tag: 'div', classNames: [styles.garageList] });\n\n  protected prevBtn = new Button({ classNames: [styles.prevBtn] });\n  protected nextBtn = new Button({ classNames: [styles.nextBtn] });\n  protected cars: CarView[] = [];\n  constructor(protected winnersBtn: Button) {\n    super({ tag: 'div', classNames: [styles.garageWrapper] });\n    this.createView();\n    getCars(state.currPage);\n    this.updateFormsView();\n    emitter.on('addNewCar', this.addNewCarToView);\n    emitter.on('destroyGarageView', this.destroyGarage);\n    emitter.on('updateCount', this.updateCarsCount);\n    emitter.on('updatePage', this.updatePages);\n    emitter.on('showWinner', this.showWinner);\n    emitter.on('finishRace', this.enableWinnersBtn);\n    this.generateBtn.on('click', this.onClickGenerateBtn);\n    this.prevBtn.on('click', this.onClickPrevBtn);\n    this.nextBtn.on('click', this.onClickNextBtn);\n    this.raceBtn.on('click', this.onClickRaceBtn);\n    this.resetBtn.on('click', this.onClickResetBtn);\n  }\n\n  protected createView(): void {\n    const topBlock = new BaseComponent({ tag: 'div', classNames: [styles.topBlock] });\n    const buttonsBlock = new BaseComponent({ tag: 'div', classNames: [styles.buttonsBlock] });\n    buttonsBlock.append(this.raceBtn, this.resetBtn, this.generateBtn);\n    topBlock.append(this.createForm, this.updateForm, buttonsBlock, this.garageTitle);\n    const pagination = new BaseComponent({ tag: 'div', classNames: [styles.pagination] });\n    pagination.append(this.prevBtn, this.pageTitle, this.nextBtn);\n    this.append(this.firstTitle, topBlock, this.garageList, pagination);\n  }\n\n  protected updateFormsView() {\n    const formsState = state.getGarageFormsState();\n    if (formsState.length === 0) return;\n    this.forms.forEach((form) => {\n      const formState = formsState.find((fstate) => fstate.formName === form.formName);\n      if (!formState) {\n        throw new Error('formstate is undefined');\n      }\n      form.updateView(formState);\n    });\n  }\n\n  public updateCarsCount = (count: unknown) => {\n    if (typeof count !== 'number') {\n      throw new Error('count is not number');\n    }\n    this.garageTitle.setTextContent(`Garage (${count})`);\n  };\n\n  public updatePages = (page: unknown, prevBtnState: unknown, nextBtnState: unknown) => {\n    if (typeof page !== 'number') {\n      throw new Error('count is not number');\n    }\n    if (typeof prevBtnState !== 'boolean' || typeof nextBtnState !== 'boolean') {\n      throw new Error('state of pagination is not boolean');\n    }\n\n    this.pageTitle.setTextContent(`${page}`);\n    this.prevBtn.element.disabled = !prevBtnState;\n    this.nextBtn.element.disabled = !nextBtnState;\n  };\n\n  public addNewCarToView = (car: unknown): void => {\n    if (!isCarData(car)) {\n      throw new Error('argument is not type CarData');\n    }\n\n    const newCar = new CarView(car);\n    this.cars.push(newCar);\n    this.garageList.append(newCar);\n  };\n\n  protected destroyGarage = () => {\n    this.cars = [];\n    if (this.garageList.children) {\n      this.garageList.destroyChildren();\n    }\n  };\n\n  protected onClickGenerateBtn = (): void => {\n    const newCars: NewCarData[] = getRandomCars();\n    addRandomCars(newCars);\n  };\n\n  protected onClickPrevBtn = (): void => {\n    getCars(state.currPage - 1);\n  };\n  protected onClickNextBtn = (): void => {\n    getCars(state.currPage + 1);\n  };\n\n  protected onClickRaceBtn = (): void => {\n    state.setRaceState(true);\n    this.cars.forEach((car) => {\n      car.clickOnStartBtn();\n    });\n    this.resetBtn.disable();\n    this.raceBtn.disable();\n    this.winnersBtn.disable();\n  };\n\n  protected onClickResetBtn = (): void => {\n    state.setRaceState(false);\n    state.setWinner(0);\n    this.cars.forEach((car) => {\n      car.clickOnStopBtn();\n    });\n    this.firstTitle.setTextContent('');\n    this.raceBtn.enable();\n    this.resetBtn.disable();\n  };\n\n  protected showWinner = (carData: unknown): void => {\n    if (!isCarData(carData)) {\n      throw new Error('argument is not type CarData');\n    }\n    const time = (carData.duration / 1000).toFixed(2);\n    this.firstTitle.setTextContent(`${carData.name} went first in ${time}s`);\n    this.resetBtn.enable();\n  };\n\n  protected enableWinnersBtn = (): void => {\n    this.winnersBtn.enable();\n  };\n\n  public getFormsState(): FormState[] {\n    const formsState: FormState[] = [];\n    this.forms.forEach((form) => {\n      const { name, color, id } = form.getInputsValues();\n      const formState = {\n        formName: form.formName,\n        disabled: form.disabled,\n        nameInput: name,\n        colorInput: color,\n        currentId: id,\n      };\n      formsState.push(formState);\n    });\n    return formsState;\n  }\n}\n","import styles from './winnersview.module.scss';\nimport BaseComponent from '../utilsComponents/BaseComponent';\nimport Button from '../utilsComponents/Button';\nimport { getWinners } from '../api';\nimport { limitWinners } from '../../utils/constants';\nimport state from '../State';\nimport emitter from '../EventEmitter';\nimport { WinnerWithCar, SortState, OrderState } from '../../utils/types';\nimport carIcon from '../../utils/icons';\n\ntype TableParams = {\n  page: number;\n  limit: number;\n  sort?: string;\n  order?: string;\n};\nexport default class WinnersView extends BaseComponent {\n  public winnersTitle = new BaseComponent({ tag: 'p', classNames: [styles.winnersTitle] });\n  public pageTitle = new BaseComponent({ tag: 'p', classNames: [styles.pageTitle] });\n  public tableBody = new BaseComponent({ tag: 'tbody', classNames: [styles.tableBody] });\n\n  protected winsColumn = new BaseComponent({\n    tag: 'th',\n    classNames: [styles.winsColumn],\n    text: 'Wins',\n  });\n  protected timeColumn = new BaseComponent({\n    tag: 'th',\n    classNames: [styles.timeColumn],\n    text: 'Best time,s',\n  });\n\n  protected prevBtn = new Button({ classNames: [styles.prevBtn] });\n  protected nextBtn = new Button({ classNames: [styles.nextBtn] });\n\n  constructor() {\n    super({ tag: 'div', classNames: [styles.winnersWrapper] });\n    this.createView();\n    this.getWinnersData({\n      page: state.winnersPage,\n      limit: limitWinners,\n      sort: state.sort,\n      order: state.order,\n    });\n    emitter.on('updateWinnersView', this.updateTableView);\n    emitter.on('updateWinnersCount', this.updateWinnersTitle);\n    emitter.on('updateWinnersPage', this.updateWinnersPage);\n    this.prevBtn.on('click', this.onClickPrevBtn);\n    this.nextBtn.on('click', this.onClickNextBtn);\n    this.winsColumn.on('click', this.onClickWinsSort);\n    this.timeColumn.on('click', this.onClickTimeSort);\n  }\n\n  protected createView() {\n    const table = new BaseComponent({ tag: 'table', classNames: [styles.winnersTable] });\n    const tableTitle = new BaseComponent({ tag: 'tr', classNames: [styles.tableHeader] });\n\n    const numberColumn = new BaseComponent({\n      tag: 'th',\n      classNames: [styles.numberColumn],\n      text: 'N',\n    });\n    const carViewColumn = new BaseComponent({\n      tag: 'th',\n      classNames: [styles.carviewColumn],\n      text: 'Car',\n    });\n    const carNameColumn = new BaseComponent({\n      tag: 'th',\n      classNames: [styles.carnameColumn],\n      text: 'Name',\n    });\n\n    tableTitle.append(numberColumn, carViewColumn, carNameColumn, this.winsColumn, this.timeColumn);\n    table.append(tableTitle, this.tableBody);\n    const pagination = new BaseComponent({ tag: 'div', classNames: [styles.pagination] });\n    pagination.append(this.prevBtn, this.pageTitle, this.nextBtn);\n    this.append(this.winnersTitle, table, pagination);\n    this.checkSortedTable();\n  }\n\n  protected checkSortedTable() {\n    const sortedField = state.getSortValue();\n    const orderField = state.getOrderValue();\n    if (sortedField === SortState.wins) {\n      if (orderField === OrderState.up) {\n        this.winsColumn.addClass(styles.arrowUp);\n      } else {\n        this.winsColumn.addClass(styles.arrowDown);\n      }\n    } else if (sortedField === SortState.time) {\n      if (orderField === OrderState.up) {\n        this.timeColumn.addClass(styles.arrowUp);\n      } else {\n        this.timeColumn.addClass(styles.arrowDown);\n      }\n    }\n  }\n\n  protected updateTableView = (data: unknown, page: unknown) => {\n    if (!Array.isArray(data)) {\n      throw new Error('argument is not array');\n    }\n\n    if (typeof page !== 'number') {\n      throw new Error('page is not number');\n    }\n    if (this.tableBody.children) {\n      this.tableBody.destroyChildren();\n    }\n\n    data.forEach((winner: WinnerWithCar, i) => {\n      const row = new BaseComponent({ tag: 'tr', classNames: ['winner-row'] });\n      const numbCell = new BaseComponent({\n        tag: 'td',\n        classNames: ['numb-cell'],\n        text: `${i + 1 + (page - 1) * 10}`,\n      });\n      const iconCell = new BaseComponent({ tag: 'td', classNames: [styles.iconCell] });\n      iconCell.html(carIcon(winner.color));\n      const nameCell = new BaseComponent({\n        tag: 'td',\n        classNames: ['name-cell'],\n        text: winner.name,\n      });\n      const winsCell = new BaseComponent({\n        tag: 'td',\n        classNames: ['wins-cell'],\n        text: `${winner.wins}`,\n      });\n      const timeCell = new BaseComponent({\n        tag: 'td',\n        classNames: ['time-cell'],\n        text: `${winner.time}`,\n      });\n      row.append(numbCell, iconCell, nameCell, winsCell, timeCell);\n      this.tableBody.append(row);\n    });\n  };\n\n  protected getWinnersData = (tableParams: TableParams) => {\n    const params = Object.entries(tableParams)\n      .map(([key, value]) => ({\n        key: `_${key}`,\n        value: `${value}`,\n      }))\n      .filter((el) => el.value !== '');\n\n    getWinners(params, tableParams.page);\n  };\n\n  protected updateWinnersTitle = (count: unknown) => {\n    this.winnersTitle.setTextContent(`Winners (${count})`);\n  };\n\n  protected updateWinnersPage = (page: unknown, prevBtnState: unknown, nextBtnState: unknown) => {\n    if (typeof page !== 'number') {\n      throw new Error('count is not number');\n    }\n    if (typeof prevBtnState !== 'boolean' || typeof nextBtnState !== 'boolean') {\n      throw new Error('state of pagination is not boolean');\n    }\n    this.pageTitle.setTextContent(`${page}`);\n    this.prevBtn.element.disabled = !prevBtnState;\n    this.nextBtn.element.disabled = !nextBtnState;\n  };\n\n  protected onClickPrevBtn = () => {\n    this.getWinnersData({\n      page: state.winnersPage - 1,\n      limit: limitWinners,\n      sort: state.sort,\n      order: state.order,\n    });\n  };\n\n  protected onClickNextBtn = () => {\n    this.getWinnersData({\n      page: state.winnersPage + 1,\n      limit: limitWinners,\n      sort: state.sort,\n      order: state.order,\n    });\n  };\n\n  public onClickWinsSort = () => {\n    const order = state.order === OrderState.up ? OrderState.down : OrderState.up;\n    this.getWinnersData({\n      page: state.winnersPage,\n      limit: limitWinners,\n      sort: SortState.wins,\n      order,\n    });\n\n    const classCss = order === OrderState.up ? styles.arrowUp : styles.arrowDown;\n    let prevClass: string = '';\n    if (state.order) {\n      prevClass = state.order === OrderState.up ? styles.arrowUp : styles.arrowDown;\n      this.winsColumn.removeClass(prevClass);\n    }\n    this.winsColumn.addClass(classCss);\n    this.timeColumn.removeClass(styles.arrowUp);\n    this.timeColumn.removeClass(styles.arrowDown);\n    state.setOrderAndSortState(SortState.wins, order);\n  };\n\n  public onClickTimeSort = () => {\n    const order = state.order === OrderState.up ? OrderState.down : OrderState.up;\n    this.getWinnersData({\n      page: state.winnersPage,\n      limit: limitWinners,\n      sort: SortState.time,\n      order,\n    });\n\n    const classCss = order === OrderState.up ? styles.arrowUp : styles.arrowDown;\n    let prevClass: string = '';\n    if (state.order) {\n      prevClass = state.order === OrderState.up ? styles.arrowUp : styles.arrowDown;\n      this.timeColumn.removeClass(prevClass);\n    }\n\n    this.timeColumn.addClass(classCss);\n    this.winsColumn.removeClass(styles.arrowUp);\n    this.winsColumn.removeClass(styles.arrowDown);\n    state.setOrderAndSortState(SortState.time, order);\n  };\n}\n","import styles from './app.module.scss';\nimport Button from '../utilsComponents/Button';\nimport BaseComponent from '../utilsComponents/BaseComponent';\nimport GarageView from '../GarageView/GarageView';\nimport WinnersView from '../WinnersView/WinnersView';\nimport state from '../State';\n\nexport default class App {\n  protected root = new BaseComponent({ tag: 'div', classNames: [styles.wrapper] });\n  protected garageBtn = new Button({\n    classNames: [styles.garageBtn],\n    text: 'to Garage',\n  });\n\n  public winnersBtn = new Button({\n    classNames: [styles.winnersBtn],\n    text: 'to Winners',\n  });\n\n  protected garageView?: GarageView;\n  protected winnersView?: WinnersView;\n\n  constructor() {\n    this.garageBtn.on('click', this.createGarageView);\n    this.winnersBtn.on('click', this.createWinnersView);\n  }\n\n  public start(): void {\n    this.createView();\n  }\n\n  protected createView(): void {\n    const btnBox = new BaseComponent({ tag: 'div', classNames: [styles.btnBox] });\n    btnBox.append(this.garageBtn, this.winnersBtn);\n    this.root.append(btnBox);\n    document.body.append(this.root.getElement());\n    this.createGarageView();\n  }\n\n  protected createGarageView = () => {\n    if (this.winnersView) {\n      this.winnersView.destroy();\n    }\n    this.garageView = new GarageView(this.winnersBtn);\n    this.root.append(this.garageView);\n    this.garageBtn.disable();\n    this.winnersBtn.enable();\n  };\n\n  protected createWinnersView = () => {\n    if (!this.garageView) {\n      throw new Error('garageview is undefined');\n    }\n    state.saveGarageState(this.garageView.getFormsState());\n    this.garageView.destroy();\n    this.winnersView = new WinnersView();\n    this.root.append(this.winnersView);\n    this.winnersBtn.disable();\n    this.garageBtn.enable();\n\n    state.resetRace();\n  };\n}\n","import App from './app/components/App/App';\n\nconst app = new App();\n\napp.start();\n"],"names":["BaseComponent","props","__publicField","cssClasses","cssClass","text","className","compChildren","child","newComp","index","name","value","prop","selector","eventType","callback","html","handler","Button","carIcon","color","SortState","OrderState","EventEmitter","event","listener","l","args","eventListeners","emitter","limitCarsOnPage","limitWinners","randomCarsCount","defaultColor","State","car","newCar","raceState","id","carData","data","timeInSec","cars","count","numb","newCount","newPage","engineData","duration","status","state","winners","winnersData","winner","i","page","sort","order","formsState","baseURL","path","getQueryString","params","el","getCars","response","carsCount","error","createCar","newCarData","updateCar","deleteWinner","deleteCar","createWinner","getWinner","driveCar","controller","startCar","stopCar","addRandomCars","newCars","promises","getWinners","winnersCount","dataWinners","dataCars","updateWinner","getDistance","carRect","carWidth","rightCoordinate","leftCoorDinate","isCarData","CarView","styles","speed","startX","startTime","step","timestamp","progress","newX","buttons","controls","flag","InteractionForm","formName","component","input","formState","e","CreateCarForm","getRandomModel","randomCars","randomBrandIndex","randomBrandObj","brand","models","randomModelIndex","model","getRandomColor","letters","getRandomCars","carsArr","randomCar","GarageView","winnersBtn","UpdateCarForm","prevBtnState","nextBtnState","time","topBlock","buttonsBlock","pagination","form","fstate","WinnersView","row","numbCell","iconCell","nameCell","winsCell","timeCell","tableParams","key","classCss","prevClass","table","tableTitle","numberColumn","carViewColumn","carNameColumn","sortedField","orderField","App","btnBox","app"],"mappings":"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C1B,KAAM,KAAK,cAAc,KAAK,SAAS,EACvC,MAAO,KAAK,cAAc,KAAK,UAAU,CAAA,EAEjC+B,GAAA,KAAK,UAAW/B,CAAO,EAEjC,KAAK,UAAU,EACf,KAAK,QAAQ,EACb,KAAK,UAAY,CAAA,GAjCjB,KAAK,SAAS,aAAa,EAC3B,KAAK,QAAQ,EACR,KAAA,UAAU,eAAe,QAAQ,EAC9BV,EAAA,GAAG,mBAAoB,KAAK,UAAU,EACzC,KAAA,GAAG,SAAU,KAAK,eAAe,CACxC,CA8BF,CC1CA,MAAMa,GAAoB,CACxB,CACE,OAAQ,CACN,UACA,QACA,OACA,QACA,aACA,SACA,SACA,SACA,QACA,SACF,CACF,EACA,CACE,MAAO,CACL,QACA,SACA,OACA,QACA,UACA,MACA,YACA,OACA,UACA,UACF,CACF,EACA,CACE,QAAS,CACP,QACA,SACA,WACA,QACA,OACA,UACA,SACA,SACA,aACA,UACF,CACF,EACA,CACE,UAAW,CACT,YACA,UACA,SACA,WACA,QACA,SACA,WACA,SACA,WACA,UACF,CACF,EACA,CACE,cAAe,CACb,QACA,SACA,SACA,QACA,OACA,SACA,OACA,OACA,oBACA,SACF,CACF,EACA,CACE,gBAAiB,CACf,UACA,UACA,UACA,MACA,MACA,MACA,UACA,UACA,MACA,KACF,CACF,EACA,CACE,OAAQ,CACN,WACA,WACA,KACA,KACA,KACA,WACA,KACA,WACA,WACA,UACF,CACF,EACA,CAAE,QAAS,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,QAAQ,CAAE,EAC5E,CACE,QAAS,CACP,UACA,SACA,SACA,WACA,OACA,WACA,QACA,SACA,WACA,OACF,CACF,EACA,CACE,IAAK,CACH,UACA,WACA,YACA,OACA,QACA,SACA,UACA,MACA,UACA,IACF,CACF,CACF,EC9HA,SAASsE,GAAeC,EAAiC,CACvD,MAAMC,EAAmB,KAAK,MAAM,KAAK,SAAWD,EAAW,MAAM,EAC/DE,EAAiBF,EAAWC,CAAgB,EAC5CE,EAAQ,OAAO,KAAKD,CAAc,EAAE,CAA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"}